public class PageParam
{
	private var _vo;
	private var data={ };
	public function new(var vo)
	{
		_vo = vo;
	}
	public function __prop(var sName,var sVal)
	{
		if( argc < 2 )
		{
			if( data.Has(sName) ) return prop(data,sName);
			else return prop(_vo,sName);
		}
		else
		{
			prop(data,sName,sVal);
		}
	}
}

public class ServiceBase
{
	//public var _Session = new session(); 此变量已过时,被"会话"变量取代
	public var _vo = new vo();
	public var ControlProp={ };
	public var PageParam = new PageParam( _vo );
	public var 会话 = modulecall("模型.运行时.会话.Current");
	private var 事务状态中 = false;

	public function new()
	{
	}

	public function BeginTrans()
	{
		if( !事务状态中 )
		{
			var oDefaultConn = new dao.DefaultConnection();
			var oConn = oDefaultConn._Conn;
			if( oConn <> null )
			{
				var obj = oConn.GetConnection();
				obj.Execute("SET AUTOCOMMIT=0");
				obj.Execute("BEGIN");
				(new log()).Infor("after service.begintrans...");
				事务状态中 = true;
			}
		}
	}
	public function CommitTrans()
	{
		if( 事务状态中 )
		{
			var oDefaultConn = new dao.DefaultConnection();
			var oConn = oDefaultConn._Conn;
			if( oConn <> null )
			{
				var obj = oConn.GetConnection();
				obj.Execute("COMMIT");
				事务状态中 = false;
			}
		}
	}
	public function RollbackTrans()
	{
		if( 事务状态中 )
		{
			var oDefaultConn = new dao.DefaultConnection();
			var oConn = oDefaultConn._Conn;
			if( oConn <> null )
			{
				var obj = oConn.GetConnection();
				obj.Execute("ROLLBACK");
				事务状态中 = false;
			}
		}
	}

	public function delete()
	{
		RollbackTrans();
	}


	public function ErrorAndRedirect(var sErr,var url)
	{
		_alert("error",sErr,url);
	}
	public function InfoAndRedirect(var sErr,var url)
	{
		_alert("info",sErr,url);
	}
	public function SuccessAndRedirect(var sErr,var url)
	{
		_alert("success",sErr,url);
	}
	public function WarningAndRedirect(var sErr,var url)
	{
		_alert("block",sErr,url);
	}
	private function _alert(var sType="error",var sErr,var url)
	{
		var title="错误";
		switch(sType)
		{
			case "error": title="错误";
			case "info" : title = "信息";
			case "block" : title="警告";
			case "success" : title="提示";
		}
		var s = "
		<html>
			<head>
				<meta charset=\"utf-8\" />
				<link rel=\"stylesheet\" type=\"text/css\" href=\""+_vo.FixUrl("/bjui/bootstrap2.2/css/bootstrap.css")+"\">
				<link rel=\"stylesheet\" type=\"text/css\" href=\""+_vo.FixUrl("/bjui/css/bjui.css")+"\">
				<script type=\"text/javascript\" src=\""+_vo.FixUrl("/bjui/bootstrap2.2/js/jquery-1.7.2.min.js")+"\"></script>
				<script type=\"text/javascript\" src=\""+_vo.FixUrl("/bjui/bootstrap2.2/js/bootstrap.min.js")+"\"></script>
				<!--[if lte IE 6]>
				  <!-- bsie js 补丁只在IE6中才执行 -->
				  <script type=\"text/javascript\" src=\""+_vo.FixUrl("/bjui/bootstrap2.2/js/bootstrap-ie.js")+"\"></script>
				<![endif]-->
				<script type=\"text/javascript\" src=\""+_vo.FixUrl("/bjui/js/bjui.js")+"\"></script>
			
				<script src=\""+_vo.FixUrl("/bjui/js/jquery.easing.min.js")+"\" type=\"text/javascript\" ></script>
				
			</head>
			<body >
				<div style=\"height:100px\"></div>
				<div class=\"row-fluid\">
					<div class=\"span4\"></div>
					<div class=\"span4\">
						<div >
							<div class=\"alert alert-"+ sType+"\" >
								<h4>"+title+"</h4>
								<div style=\"text-align:center\">
								"+sErr+"
								</div>
								<div style=\"text-align:center;margin-left:auto;margin-right:auto\">
									<div style=\"margin-top:20px;margin-bottom:10px\">
										<button class=\"btn  btn-primary\" type=\"button\" id=\"okbtn\">确定</button>
									</div>
								</div>
							</div>
							<script type=\"text/javascript\">
								$(\"#okbtn\").bind(\"click\",function(){
									window.location.href = \""+ url + "\";
								});
							</script>
						</div>
					</div>
					<div class=\"span4\"></div>
				</div>
			</body>
		</html>
		";

		echo(s);
		halt;
	}
	

	public function EventHandler()
	{
		if( "" <> _vo.__event__ )
		{
			var bFound = false;
			var iCount = mfcount(this);
			var i;
			for(i=0;i<iCount;i++)
			{
				var sFuncName = mfname(this,i);
				if( sFuncName == _vo.__event__ )
				{
					bFound = true;
					break;
				}
			}
			if( bFound )
			{
				call(this,_vo.__event__);//由函数自己决定是否halt   !!!  
			}
		}
	}

}




